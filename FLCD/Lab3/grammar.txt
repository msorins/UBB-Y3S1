------------
N -> non terminals

PROGRAM, DECLARATION, VARDECL, TYPE, ARRAYDECL, STRUCTDECL, CMPDSTMT, STMTLIST, STMT, SIMPLSTMT, ASSINGSTMT, EXPRESSION, TERM, FACTOR, IOSTMT, READSTMT, WRITESTMT, STRUCTSTMT, IFSTMT, WHILESTMT, CONDITION, IDENTIFIER, LETTER, DIGIT, NR, RELATION
--------------
E -> terminals

+ - * /gt ge lt le eq < > space main char const else if int while read write true string bool char struct
"0", "1" ... "9"
"a"  "b" ... "z" "A" "B" .... "Z"
----------------
P -> productions

PROGRAM - main { DECLIST ; CMPDSTMT }
DECLIST - DECLATATION | DECLARATION ; DECLIST
VARDECL - TYPE IDENTIFIRE = NR
ARRAYDECL - TYPE IDENTIFIER [ DECLIST ]
STRUCTDECL - struct IDENTIFIER { DECLIST }
CMPSTMT - { STMTLIST }
STMTLIST - STMT | STMT ; STMTLIST
STMT - SIMPLSTMT | STRUCTSTMT | IOSTMT 
SIMPLSTMT - ASSIGNSTMT | IOSTMT
ASSIGNSTMT - IDENTIFIER = EXPRESION
EXPRESSION - EXPRESSION + TERM | EXPRESION - TERM | TERM
TERM - TERM / FACTOR | TERM * TERM | FACTOR
FACTOR - ( EXPRESSION ) IDENTIFIER | NR
IOSTMT -  WRITESTMT | READSTMT
READSTMT - cin IDENTIFIER
WRITESTMT - cout IDENTIFIER | cout IDENTIFIER
STRUCTSMT - CMPDSTMT | IFSTMT | WHILESTMT
IFSTMT - if ( CONDITION ) CMPDSTMT else { CMPDSTMT }
WHILESTMT - while ( CONDITION ) CMPDSTMT
CONDITION - EXPRESION RELATION EXPRESION

IDENTIFIER - LETTER | LETTER IDENTIFIER
LETTER - "a" | "b" | ... | "z" | "A" | "B" | . ..| "Z"
DIGIT - "0" | "1" |...| "9"
RELATION  - "lt" | "le" | "eq" | "neq" | "ge" | "gt"
------------
S -> starting symbol 

PROGRAM


